{
	"name": "ingest_all_table",
	"properties": {
		"activities": [
			{
				"name": "for_each_table",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.loop_input",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "if_data_incremental",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "if_incremental",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(equals(item().load_strategy,'incremental'), greater(activity('SQLToLake').output.dataRead,0))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "delete_empty_file",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "parquet_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"table_name": {
														"value": "@item().table",
														"type": "Expression"
													},
													"file": {
														"value": "@concat(item().table,'_',variables('current'))",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "update_last_cdc",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "max_cdc",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "JsonSource",
												"additionalColumns": [
													{
														"name": "cdc",
														"value": {
															"value": "@activity('max_cdc').output.resultSets[0].rows[0].cdc",
															"type": "Expression"
														}
													}
												],
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "JsonReadSettings"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "json_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"table_name": {
														"value": "@item().table",
														"type": "Expression"
													},
													"file": "empty.json"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "json_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"table_name": {
														"value": "@item().table",
														"type": "Expression"
													},
													"file": "cdc.json"
												}
											}
										]
									},
									{
										"name": "max_cdc",
										"type": "Script",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "azure_sql",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"type": "Query",
													"text": {
														"value": "SELECT MAX(@{item().cdc_column}) AS cdc FROM @{item().schema}.@{item().table}",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									}
								]
							}
						},
						{
							"name": "if_incremental",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().load_strategy,'incremental')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "full_load",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "SELECT *\nFROM @{item().schema}.@{item().table}",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "azure_sql",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "parquet_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"table_name": {
														"value": "@item().table",
														"type": "Expression"
													},
													"file": {
														"value": "@concat(item().table,'_',item().load_strategy)",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "SQLToLake",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "current_timestamp",
												"dependencyConditions": [
													"Succeeded"
												]
											},
											{
												"activity": "last_cdc",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "SELECT * FROM @{item().schema}.@{item().table} WHERE @{item().cdc_column} > '@{if(empty(item().from_date),activity('last_cdc').output.value[0].cdc,item().from_date)}'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "azure_sql",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "parquet_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"table_name": {
														"value": "@item().table",
														"type": "Expression"
													},
													"file": {
														"value": "@concat(item().table,'_',variables('current'))",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "last_cdc",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "JsonSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"wildcardFileName": "*.json",
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "JsonReadSettings"
												}
											},
											"dataset": {
												"referenceName": "json_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"table_name": {
														"value": "@item().table",
														"type": "Expression"
													},
													"file": "cdc.json"
												}
											},
											"firstRowOnly": false
										}
									},
									{
										"name": "current_timestamp",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "current",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"loop_input": {
				"type": "array",
				"defaultValue": [
					{
						"schema": "dbo",
						"table": "DimCustomer",
						"cdc_column": "updated_at",
						"from_date": "",
						"load_strategy": "incremental"
					},
					{
						"schema": "dbo",
						"table": "DimProduct",
						"cdc_column": "updated_at",
						"from_date": "",
						"load_strategy": "incremental"
					},
					{
						"schema": "dbo",
						"table": "DimSeller",
						"cdc_column": "updated_at",
						"from_date": "",
						"load_strategy": "incremental"
					},
					{
						"schema": "dbo",
						"table": "FactOrder",
						"cdc_column": "order_approved_at",
						"from_date": "",
						"load_strategy": "incremental"
					},
					{
						"schema": "dbo",
						"table": "FactOrderItem",
						"cdc_column": "",
						"from_date": "",
						"load_strategy": "full"
					},
					{
						"schema": "dbo",
						"table": "DimDate",
						"cdc_column": "",
						"from_date": "",
						"load_strategy": "full"
					}
				]
			}
		},
		"variables": {
			"current": {
				"type": "String"
			}
		},
		"annotations": []
	}
}